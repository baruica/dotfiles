explain()
{
    if [ "$#" -eq 0 ]; then
        while read  -p "Command: " cmd; do
            curl -Gs "https://www.mankier.com/api/explain/?cols="$(tput cols) --data-urlencode "q=$cmd"
        done
        echo "Bye!"
    elif [ "$#" -eq 1 ]; then
        curl -Gs "https://www.mankier.com/api/explain/?cols="$(tput cols) --data-urlencode "q=$1"
    else
        echo "Usage"
        echo "explain                  interactive mode."
        echo "explain 'cmd -o | ...'   one quoted command to explain it."
    fi
}
# Update 26-03-2015. If using this command gives no output, see if running a simple fetch causes this error:
# $ curl https://www.mankier.com
# curl: (35) Cannot communicate securely with peer: no common encryption algorithm(s).
# If so, try specifying a cipher in the curl commands: curl --ciphers ecdhe_ecdsa_aes_128_sha

ld()
{
    app=${1:-app}
    dump_prefix=${2:-app}

    db="dev_${app}"

    zcat $(ls -1 ~/temp/dumps/${dump_prefix}-* | tail -1) \
        | pv --progress --size $(gzip -l $(ls -1 ~/temp/dumps/${dump_prefix}-* | tail -1) | sed -n 2p | awk '{print $2}') --name "${db}" \
        | mysql -uroot -pdevpass1 ${db}
}

loopdir()
{
    command=$*
    for d in */ ; do (cd $d; $command); done
}

# loop over directory based on a glob pattern loopdirp 'a*' rm deploy.yml
loopdirp()
{
    pattern=$1
    shift 1
    command=$*
    for d in $pattern/ ; do (cd $d; $command); done
}

md()
{
    mkdir -p "$1" && cd "$1";
}
